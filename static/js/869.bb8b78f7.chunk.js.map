{"version":3,"file":"static/js/869.bb8b78f7.chunk.js","mappings":"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","sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\r\nimport ThemeContext from \"../../contexts/themeContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DarkModeSwitcher = ({ onClose }) => {\r\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\r\n    const { t } = useTranslation();\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    checked={!isDarkMode}\r\n                    name=\"checkedDarkMode\"\r\n                    color=\"primary\"\r\n                    onChange={() => {\r\n                        if (onClose) {\r\n                            onClose();\r\n                        }\r\n                        setIsDarkMode(!isDarkMode);\r\n                    }}\r\n                />\r\n            }\r\n            label={t('dark_mode')}\r\n        />\r\n    );\r\n};\r\n\r\nDarkModeSwitcher.defaultProps = {\r\n    isDarkMode: true\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\r\n\r\nexport default DarkModeSwitcher","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { Link, Events } from \"react-scroll\";\r\nimport LoaderContext from \"../../contexts/loaderContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst smoothScrollProps = {\r\n    spy: true,\r\n    smooth: true,\r\n    offset: -70,\r\n    duration: 500,\r\n};\r\n\r\nconst AnimatedLink = React.forwardRef((props, ref) => (\r\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\r\n        <Link {...smoothScrollProps} {...props} />\r\n    </motion.div>\r\n));\r\n\r\nconst Menu = ({homeIsActive}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(false);\r\n    const [isScrolling, setIsScrolling] = useState(false);\r\n    const { isLoading } = useContext(LoaderContext);\r\n    const controls = useAnimation();\r\n    const { t } = useTranslation()\r\n\r\n    useEffect(() => {\r\n        Events.scrollEvent.register(\"begin\", (to, element) => {\r\n            setIsScrolling(true);\r\n        });\r\n\r\n        Events.scrollEvent.register(\"end\", (to, element) => {\r\n            setIsScrolling(false);\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start((i) => ({\r\n                y: 0,\r\n                opacity: 1,\r\n                transition: { delay: i * 0.1 + 0.3 },\r\n            }));\r\n        } else {\r\n            controls.start({ opacity: 0, y: -5 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const spyHandleChange = (index) => {\r\n        if (!isScrolling) {\r\n            setValue(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (homeIsActive){\r\n            setValue(false)\r\n        }\r\n    }, [homeIsActive])\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <StyledTabs\r\n                className={classes.tabs}\r\n                value={value}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleChange}\r\n                aria-label=\"disabled tabs example\"\r\n            >\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    custom={0}\r\n                    animate={controls}\r\n                    to=\"about\"\r\n                    label={t('menu_about')}\r\n                    onSetActive={() => spyHandleChange(0)}\r\n                    onSetInactive={()=>spyHandleChange(false)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={1}\r\n                    to=\"experience\"\r\n                    label={t('menu_experience')}\r\n                    onSetActive={() => spyHandleChange(1)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={2}\r\n                    to=\"projects\"\r\n                    label={t('menu_projects')}\r\n                    onSetActive={() => spyHandleChange(2)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={3}\r\n                    to=\"contact\"\r\n                    label={t('menu_contact')}\r\n                    onSetActive={() => spyHandleChange(3)}\r\n                />\r\n            </StyledTabs>\r\n            <motion.div custom={4} animate={controls}>\r\n                <Button\r\n                    component={MuiLink}\r\n                    href=\"/resume.pdf\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    underline=\"none\"\r\n                >\r\n                    {t('menu_resume')}\r\n                </Button>\r\n            </motion.div>\r\n            <motion.div custom={5} animate={controls}>\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    tabs: {\r\n        marginRight: theme.spacing(4),\r\n    },\r\n    navMenuItem: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n    root: {\r\n        transition: \".2s\",\r\n        minWidth: 120,\r\n        \"&:hover\": {\r\n            color: theme.palette.text.primary,\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst StyledTabs = withStyles({\r\n    indicator: {\r\n        \"& > span\": {\r\n            maxWidth: 20,\r\n        },\r\n    },\r\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MobileMenu = ({ open, onClose, onOpen }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const listItemProps = {\r\n        button: true,\r\n        component: Link,\r\n        onClick: onClose,\r\n        onKeyDown: onClose,\r\n        spy: true,\r\n        smooth: true,\r\n        offset: 0,\r\n        duration: 500,\r\n        className: classes.listItem,\r\n        activeClass: classes.active,\r\n    };\r\n\r\n    return (\r\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\r\n            <div className={classes.list} role=\"presentation\">\r\n                <List className={classes.fullList}>\r\n                    <ListItem {...listItemProps} to=\"about\">\r\n                        {t('menu_about')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"experience\">\r\n                        {t('menu_experience')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"projects\">\r\n                        {t('menu_projects')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"contact\">\r\n                        {t('menu_contact')}\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <Button\r\n                            component={MuiLink}\r\n                            href=\"/resume.pdf\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            underline=\"none\"\r\n                            >\r\n                            {t('menu_resume')}\r\n                        </Button>\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <DarkModeSwitcher onClose={onClose} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: \"auto\",\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    listItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2, 0),\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgb(80,80,80)\",\r\n        },\r\n    },\r\n    btnContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    active: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default MobileMenu;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst HamburgerIcon = ({isOpen,...rest}) => {\r\n    const controls = useAnimation()\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            controls.start(\"animate\")\r\n        } else {\r\n            controls.start(\"initial\")\r\n        }\r\n    }, [isOpen,controls]);\r\n    return (\r\n        <motion.div className={classes.container} {...rest}>\r\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        overflow:'hidden',\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"flex-end\",\r\n        cursor:\"pointer\",\r\n        padding:\"2px\"\r\n    },\r\n    line: {\r\n        height: \"3px\",\r\n        backgroundColor: theme.palette.text.secondary,\r\n    },\r\n    line1: {\r\n        width: \"35px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line2: {\r\n        width: \"25px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line3: {\r\n        width: \"35px\",\r\n    },\r\n}));\r\n\r\nexport default HamburgerIcon;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nimport Menu from \"./Menu\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport HamburgerIcon from \"./HamburgerIcon\";\r\nimport loaderContext from \"../../contexts/loaderContext\";\r\n\r\nconst Navbar = () => {\r\n    const [homeIsActive, setHomeIsActive]=useState(true)\r\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\r\n    const { isLoading } = useContext(loaderContext);\r\n    const controls = useAnimation();\r\n    const theme = useTheme();\r\n    const [scroll, setScroll] = useState(false);\r\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\r\n    const classes = useStyles({ scroll, isMobile });\r\n    const handleNav = () => setScroll(window.scrollY > 30);\r\n    window.addEventListener(\"scroll\", handleNav);\r\n\r\n    const appbarVariants = {\r\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\r\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start({\r\n                y: 0,\r\n                transition: {\r\n                    delay: 0.05,\r\n                    type: \"spring\",\r\n                    stiffness: 260,\r\n                    damping: 20,\r\n                },\r\n            });\r\n        } else {\r\n            controls.start({ y: -100 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    return (\r\n        <motion.div\r\n            animate={controls}\r\n        >\r\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\r\n                <Toolbar\r\n                    className={classes.toolbar}\r\n                    component={motion.div}\r\n                    variants={appbarVariants}\r\n                    animate={scroll ? \"scrolled\" : \"initial\"}\r\n                    transition={{\r\n                        type: \"spring\",\r\n                        stiffness: 260,\r\n                        damping: 20,\r\n                    }}\r\n                    style={{ paddingLeft: \"600px\"}}\r\n                >\r\n\r\n                    <Hidden smDown>\r\n                        <Menu homeIsActive={homeIsActive} />\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Hidden mdUp>\r\n                <MobileMenu\r\n                    open={mobileNavIsOpen}\r\n                    onClose={() => setMobileNavIsOpen(false)}\r\n                    onOpen={() => setMobileNavIsOpen(true)}\r\n                />\r\n            </Hidden>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        width: \"150px\",\r\n    },\r\n    navbar: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    toolbar: {\r\n        justifyContent: \"space-between\",\r\n        alignItems:\"center\",\r\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\r\n    },\r\n}));\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\nexport default Navbar;\r\n"],"names":["DarkModeSwitcher","_ref","onClose","_useContext","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","_jsx","FormControlLabel","control","Switch","checked","name","color","onChange","label","defaultProps","smoothScrollProps","spy","smooth","offset","duration","AnimatedLink","React","props","ref","motion","custom","animate","children","Link","_objectSpread","useStyles","makeStyles","theme","wrapper","display","alignItems","tabs","marginRight","spacing","navMenuItem","StyledTab","withStyles","root","transition","minWidth","palette","text","primary","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","variant","TabIndicatorProps","homeIsActive","classes","_useState","useState","_useState2","_slicedToArray","value","setValue","_useState3","_useState4","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","to","element","start","opacity","y","i","delay","spyHandleChange","index","_jsxs","className","indicatorColor","textColor","event","newValue","component","onSetActive","onSetInactive","Button","MuiLink","href","underline","drawer","backgroundColor","background","default","list","width","fullList","marginTop","listItem","justifyContent","padding","btnContainer","active","main","open","onOpen","listItemProps","button","onClick","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","cursor","line","height","secondary","line1","marginBottom","line2","line3","isOpen","rest","_objectWithoutProperties","_excluded","concat","variants","initial","rotate","x","logo","navbar","toolbar","isMobile","useMediaQuery","loaderContext","useTheme","scroll","setScroll","_useState5","_useState6","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","boxShadow","shadows","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","elevation","Toolbar","style","paddingLeft","Hidden","smDown","Menu","mdUp","HamburgerIcon","MobileMenu"],"sourceRoot":""}