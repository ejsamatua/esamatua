{"version":3,"file":"static/js/173.00614691.chunk.js","mappings":"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","sources":["components/DarkModeSwitcher/DarkModeSwitcher.js","components/DarkModeSwitcher/index.js","components/Navbar/LangSelector.js","components/Navbar/Menu.js","components/Navbar/MobileMenu.js","components/Navbar/HamburgerIcon.js","components/Navbar/Navbar.js","components/Navbar/index.js"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Switch, FormControlLabel } from \"@material-ui/core\";\r\nimport ThemeContext from \"../../contexts/themeContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst DarkModeSwitcher = ({ onClose }) => {\r\n    const { isDarkMode, setIsDarkMode } = useContext(ThemeContext);\r\n    const { t } = useTranslation();\r\n    return (\r\n        <FormControlLabel\r\n            control={\r\n                <Switch\r\n                    checked={!isDarkMode}\r\n                    name=\"checkedDarkMode\"\r\n                    color=\"primary\"\r\n                    onChange={() => {\r\n                        if (onClose) {\r\n                            onClose();\r\n                        }\r\n                        setIsDarkMode(!isDarkMode);\r\n                    }}\r\n                />\r\n            }\r\n            label={t('dark_mode')}\r\n        />\r\n    );\r\n};\r\n\r\nDarkModeSwitcher.defaultProps = {\r\n    isDarkMode: true\r\n};\r\n\r\nexport default DarkModeSwitcher;\r\n","import DarkModeSwitcher from \"./DarkModeSwitcher\";\r\n\r\nexport default DarkModeSwitcher","import React, { useState } from \"react\";\r\nimport { makeStyles, Menu, MenuItem, Button } from \"@material-ui/core\";\r\nimport { KeyboardArrowDownSharp } from \"@material-ui/icons\";\r\nimport i18n from \"i18next\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"flag-icon-css/css/flag-icon.min.css\";\r\n\r\nconst languages = [\r\n    {\r\n        code: \"fr\",\r\n        name: \"FR\",\r\n        country_code: \"fr\",\r\n    },\r\n    {\r\n        code: \"en\",\r\n        name: \"EN\",\r\n        country_code: \"gb\",\r\n    },\r\n];\r\n\r\nconst LangSelector = (props) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const handleClose = (code) => {\r\n        i18n.changeLanguage(code);\r\n        setAnchorEl(null);\r\n        if (props.onClose) {\r\n            props.onClose();\r\n        }\r\n    };\r\n\r\n    const currentLanguage = languages.find((elem) => elem.code === t(\"language\"));\r\n\r\n    return (\r\n        <div {...props}>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={(e) => setAnchorEl(e.currentTarget)}>\r\n                {currentLanguage && (\r\n                    <>\r\n                        <span className={`flag-icon flag-icon-${currentLanguage.country_code} ${classes.flagIcon}`} />\r\n                        {currentLanguage.name}\r\n                    </>\r\n                )}\r\n                <KeyboardArrowDownSharp style={{ color: \"white\" }} />\r\n            </Button>\r\n            <Menu\r\n                id=\"profile-menu\"\r\n                anchorEl={anchorEl}\r\n                open={Boolean(anchorEl)}\r\n                onClose={() => setAnchorEl(null)}\r\n                keepMounted\r\n                elevation={0}\r\n                getContentAnchorEl={null}\r\n                anchorOrigin={{\r\n                    vertical: \"bottom\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: \"top\",\r\n                    horizontal: \"center\",\r\n                }}\r\n                className={classes.profileMenu}\r\n                disableScrollLock\r\n            >\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"en\")}>\r\n                    <span className={`flag-icon flag-icon-gb ${classes.flagIcon}`} />\r\n                    EN\r\n                </MenuItem>\r\n                <MenuItem className={classes.menuItem} onClick={() => handleClose(\"fr\")}>\r\n                    <span className={`flag-icon flag-icon-fr ${classes.flagIcon}`} />\r\n                    FR\r\n                </MenuItem>\r\n            </Menu>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    profileMenu: {\r\n        \"& .MuiPaper-root\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            marginTop: \"2px\",\r\n            boxShadow: theme.shadows[4],\r\n        },\r\n    },\r\n    menuItem: {\r\n        \"&:hover\": {\r\n            backgroundColor: theme.backgroundSecondary,\r\n        },\r\n    },\r\n    flagIcon: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nexport default LangSelector;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Tab, Tabs, Button, makeStyles, withStyles, Link as MuiLink } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\nimport { Link, Events } from \"react-scroll\";\r\nimport LangSelector from \"./LangSelector\";\r\nimport LoaderContext from \"../../contexts/loaderContext\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst smoothScrollProps = {\r\n    spy: true,\r\n    smooth: true,\r\n    offset: -70,\r\n    duration: 500,\r\n};\r\n\r\nconst AnimatedLink = React.forwardRef((props, ref) => (\r\n    <motion.div ref={ref} custom={props.custom} animate={props.animate}>\r\n        <Link {...smoothScrollProps} {...props} />\r\n    </motion.div>\r\n));\r\n\r\nconst Menu = ({homeIsActive}) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = useState(false);\r\n    const [isScrolling, setIsScrolling] = useState(false);\r\n    const { isLoading } = useContext(LoaderContext);\r\n    const controls = useAnimation();\r\n    const { t } = useTranslation()\r\n\r\n    useEffect(() => {\r\n        Events.scrollEvent.register(\"begin\", (to, element) => {\r\n            setIsScrolling(true);\r\n        });\r\n\r\n        Events.scrollEvent.register(\"end\", (to, element) => {\r\n            setIsScrolling(false);\r\n        });\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start((i) => ({\r\n                y: 0,\r\n                opacity: 1,\r\n                transition: { delay: i * 0.1 + 0.3 },\r\n            }));\r\n        } else {\r\n            controls.start({ opacity: 0, y: -5 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const spyHandleChange = (index) => {\r\n        if (!isScrolling) {\r\n            setValue(index);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (homeIsActive){\r\n            setValue(false)\r\n        }\r\n    }, [homeIsActive])\r\n\r\n    return (\r\n        <div className={classes.wrapper}>\r\n            <StyledTabs\r\n                className={classes.tabs}\r\n                value={value}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleChange}\r\n                aria-label=\"disabled tabs example\"\r\n            >\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    custom={0}\r\n                    animate={controls}\r\n                    to=\"about\"\r\n                    label={t('menu_about')}\r\n                    onSetActive={() => spyHandleChange(0)}\r\n                    onSetInactive={()=>spyHandleChange(false)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={1}\r\n                    to=\"experience\"\r\n                    label={t('menu_experience')}\r\n                    onSetActive={() => spyHandleChange(1)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={2}\r\n                    to=\"projects\"\r\n                    label={t('menu_projects')}\r\n                    onSetActive={() => spyHandleChange(2)}\r\n                />\r\n                <StyledTab\r\n                    component={AnimatedLink}\r\n                    animate={controls}\r\n                    custom={3}\r\n                    to=\"contact\"\r\n                    label={t('menu_contact')}\r\n                    onSetActive={() => spyHandleChange(3)}\r\n                />\r\n            </StyledTabs>\r\n            <motion.div custom={4} animate={controls}>\r\n                <Button\r\n                    component={MuiLink}\r\n                    href=\"/resume.pdf\"\r\n                    variant=\"outlined\"\r\n                    color=\"primary\"\r\n                    underline=\"none\"\r\n                >\r\n                    {t('menu_resume')}\r\n                </Button>\r\n            </motion.div>\r\n            <motion.div custom={5} animate={controls}>\r\n                <LangSelector style={{ marginLeft: \"32px\" }} />\r\n            </motion.div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    wrapper: {\r\n        display: \"flex\",\r\n        alignItems: \"center\",\r\n    },\r\n    tabs: {\r\n        marginRight: theme.spacing(4),\r\n    },\r\n    navMenuItem: {\r\n        marginRight: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst StyledTab = withStyles((theme) => ({\r\n    root: {\r\n        transition: \".2s\",\r\n        minWidth: 120,\r\n        \"&:hover\": {\r\n            color: theme.palette.text.primary,\r\n        },\r\n    },\r\n}))((props) => <Tab disableRipple {...props} />);\r\n\r\nconst StyledTabs = withStyles({\r\n    indicator: {\r\n        \"& > span\": {\r\n            maxWidth: 20,\r\n        },\r\n    },\r\n})((props) => <Tabs {...props} variant=\"fullWidth\" TabIndicatorProps={{ children: <span /> }} />);\r\n\r\nexport default Menu;\r\n","import React from \"react\";\r\nimport { makeStyles, Drawer, List, Button, Divider, ListItem, Link as MuiLink } from \"@material-ui/core\";\r\nimport { Link } from \"react-scroll\";\r\nimport DarkModeSwitcher from \"../DarkModeSwitcher\";\r\nimport LangSelector from \"./LangSelector\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\nconst MobileMenu = ({ open, onClose, onOpen }) => {\r\n    const classes = useStyles();\r\n    const { t } = useTranslation();\r\n    const listItemProps = {\r\n        button: true,\r\n        component: Link,\r\n        onClick: onClose,\r\n        onKeyDown: onClose,\r\n        spy: true,\r\n        smooth: true,\r\n        offset: 0,\r\n        duration: 500,\r\n        className: classes.listItem,\r\n        activeClass: classes.active,\r\n    };\r\n\r\n    return (\r\n        <Drawer anchor=\"left\" open={open} onClose={onClose} classes={{ paper: classes.drawer }}>\r\n            <div className={classes.list} role=\"presentation\">\r\n                <List className={classes.fullList}>\r\n                    <ListItem {...listItemProps} to=\"about\">\r\n                        {t('menu_about')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"experience\">\r\n                        {t('menu_experience')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"projects\">\r\n                        {t('menu_projects')}\r\n                    </ListItem>\r\n                    <ListItem {...listItemProps} to=\"contact\">\r\n                        {t('menu_contact')}\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <Button\r\n                            component={MuiLink}\r\n                            href=\"/resume.pdf\"\r\n                            variant=\"outlined\"\r\n                            color=\"primary\"\r\n                            underline=\"none\"\r\n                            >\r\n                            {t('menu_resume')}\r\n                        </Button>\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <LangSelector onClose={onClose} />\r\n                    </ListItem>\r\n                    <ListItem className={classes.btnContainer}>\r\n                        <DarkModeSwitcher onClose={onClose} />\r\n                    </ListItem>\r\n                    <Divider />\r\n                </List>\r\n            </div>\r\n        </Drawer>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    drawer: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n    fullList: {\r\n        width: \"auto\",\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    listItem: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        padding: theme.spacing(2, 0),\r\n        \"&:hover\": {\r\n            backgroundColor: \"rgb(80,80,80)\",\r\n        },\r\n    },\r\n    btnContainer: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    active: {\r\n        backgroundColor: theme.palette.primary.main,\r\n    },\r\n}));\r\n\r\nexport default MobileMenu;\r\n","import React, { useEffect } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nconst HamburgerIcon = ({isOpen,...rest}) => {\r\n    const controls = useAnimation()\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        if (isOpen) {\r\n            controls.start(\"animate\")\r\n        } else {\r\n            controls.start(\"initial\")\r\n        }\r\n    }, [isOpen,controls]);\r\n    return (\r\n        <motion.div className={classes.container} {...rest}>\r\n            <motion.div className={`${classes.line} ${classes.line1}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:45,y:9}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line2}`} variants={{initial:{x:0,opacity:1}, animate:{x:250,opacity:0}}} animate={controls}></motion.div>\r\n            <motion.div className={`${classes.line} ${classes.line3}`} variants={{initial:{rotate:0,y:0}, animate:{rotate:-45,y:-9}}} animate={controls}></motion.div>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        overflow:'hidden',\r\n        display:\"flex\",\r\n        flexDirection:\"column\",\r\n        alignItems:\"flex-end\",\r\n        cursor:\"pointer\",\r\n        padding:\"2px\"\r\n    },\r\n    line: {\r\n        height: \"3px\",\r\n        backgroundColor: theme.palette.text.secondary,\r\n    },\r\n    line1: {\r\n        width: \"35px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line2: {\r\n        width: \"25px\",\r\n        marginBottom: \"7px\",\r\n    },\r\n    line3: {\r\n        width: \"35px\",\r\n    },\r\n}));\r\n\r\nexport default HamburgerIcon;\r\n","import React, { useContext, useState, useEffect } from \"react\";\r\nimport { makeStyles, useTheme, useMediaQuery, AppBar, Toolbar, Hidden } from \"@material-ui/core\";\r\nimport { motion, useAnimation } from \"framer-motion\";\r\n\r\nimport Menu from \"./Menu\";\r\nimport MobileMenu from \"./MobileMenu\";\r\nimport HamburgerIcon from \"./HamburgerIcon\";\r\nimport loaderContext from \"../../contexts/loaderContext\";\r\n\r\nconst Navbar = () => {\r\n    const [homeIsActive, setHomeIsActive]=useState(true)\r\n    const isMobile = useMediaQuery(\"(max-width:700px)\");\r\n    const { isLoading } = useContext(loaderContext);\r\n    const controls = useAnimation();\r\n    const theme = useTheme();\r\n    const [scroll, setScroll] = useState(false);\r\n    const [mobileNavIsOpen, setMobileNavIsOpen] = useState(false);\r\n    const classes = useStyles({ scroll, isMobile });\r\n    const handleNav = () => setScroll(window.scrollY > 30);\r\n    window.addEventListener(\"scroll\", handleNav);\r\n\r\n    const appbarVariants = {\r\n        initial: { height: isMobile ? 70 : 100, boxShadow: theme.shadows[0] },\r\n        scrolled: { height: theme.navbarHeight, boxShadow: theme.shadows[10] },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            controls.start({\r\n                y: 0,\r\n                transition: {\r\n                    delay: 0.05,\r\n                    type: \"spring\",\r\n                    stiffness: 260,\r\n                    damping: 20,\r\n                },\r\n            });\r\n        } else {\r\n            controls.start({ y: -100 });\r\n        }\r\n    }, [isLoading, controls]);\r\n\r\n    return (\r\n        <motion.div\r\n            animate={controls}\r\n        >\r\n            <AppBar position=\"fixed\" elevation={0} className={classes.navbar} component=\"nav\">\r\n                <Toolbar\r\n                    className={classes.toolbar}\r\n                    component={motion.div}\r\n                    variants={appbarVariants}\r\n                    animate={scroll ? \"scrolled\" : \"initial\"}\r\n                    transition={{\r\n                        type: \"spring\",\r\n                        stiffness: 260,\r\n                        damping: 20,\r\n                    }}\r\n                    style={{ paddingLeft: \"600px\"}}\r\n                >\r\n\r\n                    <Hidden smDown>\r\n                        <Menu homeIsActive={homeIsActive} />\r\n                    </Hidden>\r\n                    <Hidden mdUp>\r\n                        <HamburgerIcon isOpen={mobileNavIsOpen} onClick={() => setMobileNavIsOpen(!mobileNavIsOpen)} />\r\n                    </Hidden>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Hidden mdUp>\r\n                <MobileMenu\r\n                    open={mobileNavIsOpen}\r\n                    onClose={() => setMobileNavIsOpen(false)}\r\n                    onOpen={() => setMobileNavIsOpen(true)}\r\n                />\r\n            </Hidden>\r\n        </motion.div>\r\n    );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    logo: {\r\n        width: \"150px\",\r\n    },\r\n    navbar: {\r\n        backgroundColor: theme.palette.background.default,\r\n    },\r\n    toolbar: {\r\n        justifyContent: \"space-between\",\r\n        alignItems:\"center\",\r\n        padding: (props) => (props.isMobile ? theme.spacing(0, 2) : theme.spacing(0, 6)),\r\n    },\r\n}));\r\n\r\nexport default Navbar;\r\n","import Navbar from \"./Navbar\";\r\nexport default Navbar;\r\n"],"names":["DarkModeSwitcher","_ref","onClose","_useContext","useContext","ThemeContext","isDarkMode","setIsDarkMode","t","useTranslation","_jsx","FormControlLabel","control","Switch","checked","name","color","onChange","label","defaultProps","languages","code","country_code","useStyles","makeStyles","theme","profileMenu","backgroundColor","palette","primary","main","marginTop","boxShadow","shadows","menuItem","backgroundSecondary","flagIcon","marginRight","spacing","props","classes","_useState","useState","_useState2","_slicedToArray","anchorEl","setAnchorEl","handleClose","i18n","currentLanguage","find","elem","_jsxs","_objectSpread","children","Button","variant","onClick","e","currentTarget","_Fragment","className","concat","KeyboardArrowDownSharp","style","Menu","id","open","Boolean","keepMounted","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","disableScrollLock","MenuItem","smoothScrollProps","spy","smooth","offset","duration","AnimatedLink","React","ref","motion","custom","animate","Link","wrapper","display","alignItems","tabs","navMenuItem","StyledTab","withStyles","root","transition","minWidth","text","Tab","disableRipple","StyledTabs","indicator","maxWidth","Tabs","TabIndicatorProps","homeIsActive","value","setValue","_useState3","_useState4","isScrolling","setIsScrolling","isLoading","LoaderContext","controls","useAnimation","useEffect","Events","to","element","start","opacity","y","i","delay","spyHandleChange","index","indicatorColor","textColor","event","newValue","component","onSetActive","onSetInactive","MuiLink","href","underline","LangSelector","marginLeft","drawer","background","default","list","width","fullList","listItem","justifyContent","padding","btnContainer","active","onOpen","listItemProps","button","onKeyDown","activeClass","Drawer","anchor","paper","role","List","ListItem","Divider","container","overflow","flexDirection","cursor","line","height","secondary","line1","marginBottom","line2","line3","isOpen","rest","_objectWithoutProperties","_excluded","variants","initial","rotate","x","logo","navbar","toolbar","isMobile","useMediaQuery","loaderContext","useTheme","scroll","setScroll","_useState5","_useState6","mobileNavIsOpen","setMobileNavIsOpen","window","addEventListener","scrollY","appbarVariants","scrolled","navbarHeight","type","stiffness","damping","AppBar","position","Toolbar","paddingLeft","Hidden","smDown","mdUp","HamburgerIcon","MobileMenu"],"sourceRoot":""}